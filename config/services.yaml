# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    mailer_user: '%env(MAILER_USER)%'
    front_end_server: '%env(FRONT_END_SERVER)%'
    back_end_server: '%env(BACK_END_SERVER)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    App\Action\:
        resource: '../src/Action'
        tags: ['controller.service_arguments']

    App\AdminController\:
        resource: '../src/AdminController'
        tags: ['controller.service_arguments']
    sensio_framework_extra.view.guesser:
        class:     App\Templating\TemplateGuesser
        arguments: [ "@kernel" ]

    app.listener.authentication_success_response:
        class: App\EventListener\AuthenticationSuccessListener
        arguments: ["@event_dispatcher"]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    App\EventListener\NotifyDoctorEventListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    security.acl.permission.map:
        class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap

    admin.Doctor:
        class: App\Admin\DoctorAdmin
        arguments: [~, App\Entity\Doctor, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: List of doctors, group: "Doctor", show_mosaic_button: false , icon: '<i class="fa fa-user-md"></i>'   }

    admin.Patient:
        class: App\Admin\PatientAdmin
        arguments: [~, App\Entity\Patient, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Patients, group: "Patient", show_mosaic_button: false , icon: '<i class="fa fa-wheelchair	"></i>'   }

    admin.Question:
        class: App\Admin\QuestionAdmin
        arguments: [~, App\Entity\Question, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Questions, group: "Patient", show_mosaic_button: false   }

    admin.Response:
        class: App\Admin\ResponseAdmin
        arguments: [~, App\Entity\Response, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Responses, group: "Patient", show_mosaic_button: false   }